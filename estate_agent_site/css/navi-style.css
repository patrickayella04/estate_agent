/* Global*/
* {
    box-sizing: border-box;
    padding: 0;
    margin: 0; 
}
.container {
    width: 100%;
    margin: auto; 
}
/*Variables
Using css variabls, we use double dash to create the variable name and apply the valaue after the colon. Then we apply var() with the variable name inside the parenthesis var(--animation-curve)*/
:root {
    --animation-curve: cubic-bezier(1,0,0,1);
    /* cubic-bezier(1,0,0,1): A cubic BÃ©zier curve is defined by four points P0, P1, P2, and P3. P0 and P3 are the start and the end of the curve and, in CSS these points are fixed as the coordinates are ratios (the abscissa the ratio of time, the ordinate the ratio of the output range). P0 is (0, 0) and represents the initial time and the initial state, P3 is (1, 1) and represents the final time and the final state.*/
}

/*Variables end*/

/* Top navigation bar*/
.top-nav-content li {
    display: inline-flex;
    text-decoration: none;
    list-style-type: none;
    /* padding-right: 30px ; */
    padding: 15px 10px 15px 30px;
    color: #ffffff;
    font-size: 0.8em;
    font-family: sans-serif;
}
.top-nav {
    background-color: #1e1130;
}
.log-in {
    float: right;
    position: relative;
    left: 30px;
}
.country-option {
    float: right;
    position: relative;
    left: 40px;
}
.arrow-dropdown {
    float: right;
    position: relative;
    margin-left: 20px;
}
.jack-flag {
    float: right;
    position: relative;
    left: 60px;
}
.jack-flag, .arrow-dropdown, .country-option {
    cursor: pointer;
}
.can {
    float: right;
    position: relative;
    /* left: 15em;  when toggle box disapears*/
    left: 5em;
    font-size: 0.8em;
    /* padding: 5px 15px 5px 10px; */
    box-shadow: 0 0 5px 0;
    display: none;
    /*Transition constrol of appearance*/
    z-index: 1;
}
.can.show {
    /*Transition constrol of appearance of canada flag*/
    display: block;
} 
.can-flag {
    padding-right: 10px;
}
.can-word {
    border: none;
    outline: none;
    padding: 5px 15px 5px 10px;
}
.can-word:hover {
    color: #ffffff;
    background-color: #1e1130;
}
/*
Hamburger menue - test build*/
#toggle {
    visibility: hidden;
}
label.navi-toggle {
    width: 17px;
    height: 1.4px;
    background-color: #ffffff;
    cursor: pointer;
    margin-top: 6px;
}

label.navi-toggle::after {
    content: "";
    width: 17px;
    height: 1.4px;
    background-color: #ffffff;
    display: block;
    left: 0;
    margin-top: 11px; 
    cursor: pointer;

    transform-origin: left bottom; /* 2. */
    transform:rotateZ(0deg);/* 3. */

    transition: all 0.6s var(--animation-curve)  ;
}
label.navi-toggle::before {
    content: "";
    width: 17px;
    height: 1.4px;
    background-color: #ffffff;
    display: block;
    left: 0;
    margin-top: -6px;
    cursor: pointer;

    transform-origin: left top; /* 2. */
    transform:rotateZ(0deg); /* 3. */

    transition: all 0.6s var(--animation-curve)  ;
    
} 

#toggle:checked ~ label.navi-toggle::before { 
    /* background-color: #ff0000; */
    /* transform: rotateZ(41deg); */
    transform: rotateZ(45deg); /* 1. How to create rotation of an element to a degree in order to make the animation of the hamburger turn into to an X close btn.*/
} 

/* (~) selects the siblings of the element - thus once the checkbox is checked its sibiling element which is the label will change according to what css style you choose*/

#toggle:checked ~ label.navi-toggle::after {
    /* background-color: #ff0000; */
    transform: rotateZ(-45deg); /* 1. */
}
#toggle:checked ~ label.navi-toggle {
    background-color: #1e1130;
    /*the initial psuedo element changes to background color, essentially is hidden, when toggle is checked thus allowing before and after pseudo elements to rotate and create X btn*/
}
#toggle ~ label.navi-toggle {
    transition: all 0.5s var(--animation-curve)  ;
} /*Here we make the initial lable animation disapear faster (0.5s instead of 0.6s) than its pseudo elements*/

/*
Hamburger menue - test build - end */



/*drop-navi*/
.drop-navi {
    height: 80px;
    background-color: red;
}
/*drop-navi*/




@media (max-width: 1023px) {
    .top-nav, .can, .drop-navi  {
        display: none;
    }
    .log-in, .jack-flag, .country-option, .arrow-dropdown {
        position: relative;
        left: 10px;
    }
    .can {
        position: relative;
        /* left: 10em;  when toggle box disapears*/
        
    }

}
@media (max-width: 1130px) {
    .top-nav-content li {
        padding: 15px 10px 15px 20px;
        font-size: 0.8em;
    }
    .log-in, .jack-flag, .country-option {
        position: relative;
        left: 10px;
    }
    .arrow-dropdown {
        position: relative;
        left: 0;
    }
    .can {
        position: relative;
        /* left: 10em;  when toggle box disapears*/
    }
    
}


